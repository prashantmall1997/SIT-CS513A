library(C50)
#Clear Variables
rm(list = ls())
#Load the “IBM_attrition_v3” dataset:
IbmData <- read.csv(file = "/Users/prashantmall1997/Library/CloudStorage/OneDrive-Personal/Coding/Stevens-Courses/CS513A/Homework Assignments/HW4/breast-cancer-wisconsin.csv",header=TRUE, sep=",")
View(IbmData)
#I.Summarizing each column (e.g., min, max, mean)
summary(IbmData)
#II.Identifying missing values
#'is.na' returns TRUE for missing values
NaIbmData <- is.na(IbmData)
View(NaIbmData)
#III.Replacing the numerical missing values with the “mean” of the corresponding columns
for(i in 1:ncol(IbmData)){
IbmData[is.na(IbmData[,i]), i] <- mean(IbmData[,i], na.rm = TRUE)
}
View(IbmData)
#IV.Displaying the scatter plot of “Age”, “MonthlyIncome” and “YearsAtCompany”, one pair at a time df <- data.frame(IbmData)
pairs(df[,c(1,4,5)], main = "Scatter Plot of Age, MonthlyIncome and YearsAtCompany", pch = 0, col = "blue")
#V.Showing box plots for columns: “Age”, “MonthlyIncome”, and “YearsAtCompany”
boxplot(df[, c("Age","MonthlyIncome","YearsAtCompany")], col = c('Blue', 'Red', 'Green'))
title("Box Plot for Age, MonthlyIncome and YearsAtCompany")
#Clear Variables
rm(list = ls())
#Load the “IBM_attrition_v3” dataset:
IbmData <- read.csv(file = "/Users/prashantmall1997/Library/CloudStorage/OneDrive-Personal/Coding/Stevens-Courses/CS513A/Homework Assignments/HW4/breast-cancer-wisconsin.csv",header=TRUE, sep=",")
View(IbmData)
#I.Summarizing each column (e.g., min, max, mean)
summary(IbmData)
#II.Identifying missing values
#'is.na' returns TRUE for missing values
NaIbmData <- is.na(IbmData)
View(NaIbmData)
#III.Replacing the numerical missing values with the “mean” of the corresponding columns
for(i in 1:ncol(IbmData)){
IbmData[is.na(IbmData[,i]), i] <- mean(IbmData[,i], na.rm = TRUE)
}
View(IbmData)
#IV.Displaying the scatter plot of “Age”, “MonthlyIncome” and “YearsAtCompany”, one pair at a time df <- data.frame(IbmData)
pairs(df[,c(1,4,5)], main = "Scatter Plot of Age, MonthlyIncome and YearsAtCompany", pch = 0, col = "blue")
#IV.Displaying the scatter plot of “Age”, “MonthlyIncome” and “YearsAtCompany”, one pair at a time df <- data.frame(IbmData)
pairs(df[,c(1,4,5)], main = "Scatter Plot of Age, MonthlyIncome and YearsAtCompany", pch = 0, col = "blue")
#V.Showing box plots for columns: “Age”, “MonthlyIncome”, and “YearsAtCompany”
boxplot(df[, c("Age","MonthlyIncome","YearsAtCompany")], col = c('Blue', 'Red', 'Green'))
title("Box Plot for Age, MonthlyIncome and YearsAtCompany")
#Name: Mrunal Salunke
#CWID: 10467935
#Topic: Midterm Q #2
#clearing the variables
rm(list = ls())
#Loading the “IBM_Employee_Attrition_V3” from canvas into R and perform the EDA analysis by:
#importing the data from csv file
IBM_data <- read.csv(file = "/Users/mrunalsalunke/MS_CS/SEM3/CS513-KDD/mid-term/IBM_Attrition_v3.csv", header = TRUE, sep = ",", na.string = "?")
View(IBM_data)
#I.	Summarizing each column (e.g. min, max, mean )
summary(IBM_data)
#II.	Identifying missing values
#is.na returns TRUE for missing values in this case if it finds NA
Missing_IBM_data <- is.na(IBM_data)
View(Missing_IBM_data)
#III. Replacing the numerical missing values with the “mean” of the corresponding columns
for(i in 1:ncol(IBM_data)){
IBM_data[is.na(IBM_data[,i]), i] <- mean(IBM_data[,i], na.rm = TRUE)
}
#Clear Variables
rm(list = ls())
#Load the “IBM_attrition_v3” dataset:
IbmData <- read.csv(file = "/Users/prashantmall1997/Library/CloudStorage/OneDrive-Personal/Coding/Stevens-Courses/CS513A/Homework Assignments/HW4/breast-cancer-wisconsin.csv",header=TRUE, sep=",")
View(IbmData)
#I.	Summarizing each column (e.g. min, max, mean )
summary(IBM_data)
#II.	Identifying missing values
#is.na returns TRUE for missing values in this case if it finds NA
Missing_IBM_data <- is.na(IBM_data)
View(Missing_IBM_data)
#III. Replacing the numerical missing values with the “mean” of the corresponding columns
for(i in 1:ncol(IBM_data)){
IBM_data[is.na(IBM_data[,i]), i] <- mean(IBM_data[,i], na.rm = TRUE)
}
View(IBM_data)
#IV.	Displaying the scatter plot of “Age”, “MonthlyIncome” and “YearsAtCompany”,  one pair at a time
df <- data.frame(IBM_data)
pairs(df[,c(1,4,5)], main = "Scatter Plot of Age, MonthlyIncome and YearsAtCompany", pch = 0, col = "blue")
#V.	Showing box plots for columns: “Age”, “MonthlyIncome”, and “YearsAtCompany”
boxplot(df[, c("Age","MonthlyIncome","YearsAtCompany")], col = c('Blue', 'Red', 'Green'))
title("Box Plot for Age, MonthlyIncome and YearsAtCompany")
#Clear Variables
rm(list = ls())
#Load the “IBM_attrition_v3” dataset:
IBM_data <- read.csv(file = "/Users/prashantmall1997/Library/CloudStorage/OneDrive-Personal/Coding/Stevens-Courses/CS513A/Homework Assignments/HW4/breast-cancer-wisconsin.csv",header=TRUE, sep=",")
View(IBM_data)
#I.	Summarizing each column (e.g. min, max, mean )
summary(IBM_data)
#II.	Identifying missing values
#is.na returns TRUE for missing values in this case if it finds NA
Missing_IBM_data <- is.na(IBM_data)
View(Missing_IBM_data)
#III. Replacing the numerical missing values with the “mean” of the corresponding columns
for(i in 1:ncol(IBM_data)){
IBM_data[is.na(IBM_data[,i]), i] <- mean(IBM_data[,i], na.rm = TRUE)
}
View(IBM_data)
#IV.	Displaying the scatter plot of “Age”, “MonthlyIncome” and “YearsAtCompany”,  one pair at a time
df <- data.frame(IBM_data)
pairs(df[,c(1,4,5)], main = "Scatter Plot of Age, MonthlyIncome and YearsAtCompany", pch = 0, col = "blue")
#V.	Showing box plots for columns: “Age”, “MonthlyIncome”, and “YearsAtCompany”
boxplot(df[, c("Age","MonthlyIncome","YearsAtCompany")], col = c('Blue', 'Red', 'Green'))
title("Box Plot for Age, MonthlyIncome and YearsAtCompany")
#Clear Variables
rm(list = ls())
#Load the “IBM_attrition_v3” dataset:
IbmData <- read.csv(file = "/Users/prashantmall1997/Library/CloudStorage/OneDrive-Personal/Coding/Stevens-Courses/CS513A/Homework Assignments/HW4/breast-cancer-wisconsin.csv",header=TRUE, sep=",")
View(IbmData)
#I.Summarizing each column (e.g., min, max, mean)
summary(IbmData)
#II.Identifying missing values
#'is.na' returns TRUE for missing values
Missing_IbmData <- is.na(IbmData)
View(Missing_IbmData)
#III.Replacing the numerical missing values with the “mean” of the corresponding columns
for(i in 1:ncol(IbmData)){
IbmData[is.na(IbmData[,i]), i] <- mean(IbmData[,i], na.rm = TRUE)
}
View(IbmData)
#IV.Displaying the scatter plot of “Age”, “MonthlyIncome” and “YearsAtCompany”, one pair at a time df <- data.frame(IbmData)
pairs(df[,c(1,4,5)], main = "Scatter Plot of Age, MonthlyIncome and YearsAtCompany", pch = 0, col = "blue")
#Clear Variables
rm(list = ls())
#Clear Variables
rm(list = ls())
#Load the “IBM_attrition_v3” dataset:
IbmData <- read.csv(file = "/Users/prashantmall1997/Library/CloudStorage/OneDrive-Personal/Coding/Stevens-Courses/CS513A/Homework Assignments/MidTerm/IBM_Attrition_v3.csv",header=TRUE, sep=",")
View(IbmData)
#I.Summarizing each column (e.g., min, max, mean)
summary(IbmData)
#II.Identifying missing values
missingData <- is.na(IbmData)
View(missingData)
#III.Replacing the numerical missing values with the “mean” of the corresponding columns
for(i in 1:ncol(IbmData)){
IbmData[is.na(IbmData[,i]), i] <- mean(IbmData[,i], na.rm = TRUE)
}
View(IbmData)
#IV.Displaying the scatter plot of “Age”, “MonthlyIncome” and “YearsAtCompany”, one pair at a time df <- data.frame(IbmData)
pairs(df[,c(1,4,5)], main = "Scatter Plot of Age, MonthlyIncome and YearsAtCompany", pch = 0, col = "blue")
#V.Showing box plots for columns: “Age”, “MonthlyIncome”, and “YearsAtCompany”
boxplot(df[, c("Age","MonthlyIncome","YearsAtCompany")], col = c('Blue', 'Red', 'Green'))
clearPushBack()
clear
#Clear Variables
rm(list = ls())
#Load the “IBM_attrition_v3” dataset:
IbmData <- read.csv(file = "/Users/prashantmall1997/Library/CloudStorage/OneDrive-Personal/Coding/Stevens-Courses/CS513A/Homework Assignments/MidTerm/IBM_Attrition_v3.csv",header=TRUE, sep=",")
#Clear Variables
rm(list = ls())
#Load the “IBM_attrition_v3” dataset:
IbmData <- read.csv(file = "/Users/prashantmall1997/Library/CloudStorage/OneDrive-Personal/Coding/Stevens-Courses/CS513A/Homework Assignments/MidTerm/IBM_Attrition_v3.csv",header=TRUE, sep=",")
View(IbmData)
#I.Summarizing each column (e.g., min, max, mean)
summary(IbmData)
#II.Identifying missing values
missingData <- is.na(IbmData)
View(missingData)
#III.Replacing the numerical missing values with the “mean” of the corresponding columns
for(i in 1:ncol(IbmData)){
IbmData[is.na(IbmData[,i]), i] <- mean(IbmData[,i], na.rm = TRUE)
}
View(IbmData)
#IV.Displaying the scatter plot of “Age”, “MonthlyIncome” and “YearsAtCompany”, one pair at a time df <- data.frame(IbmData)
pairs(df[,c(1,4,5)], main = "Scatter Plot of Age, MonthlyIncome and YearsAtCompany", pch = 0, col = "blue")
#IV.Displaying the scatter plot of “Age”, “MonthlyIncome” and “YearsAtCompany”, one pair at a time df <- data.frame(IbmData)
pairs(df[,c(1,4,5)], main = "Scatter Plot of Age, MonthlyIncome and YearsAtCompany", pch = 0, col = "blue")
#Clear Variables
rm(list = ls())
#Load the “IBM_attrition_v3” dataset:
IbmData <- read.csv(file = "/Users/prashantmall1997/Library/CloudStorage/OneDrive-Personal/Coding/Stevens-Courses/CS513A/Homework Assignments/MidTerm/IBM_Attrition_v3.csv",header=TRUE, sep=",")
View(IbmData)
#I.Summarizing each column (e.g., min, max, mean)
summary(IbmData)
#II.Identifying missing values
missingData <- is.na(IbmData)
View(missingData)
#III.Replacing the numerical missing values with the “mean” of the corresponding columns
for(i in 1:ncol(IbmData)){
IbmData[is.na(IbmData[,i]), i] <- mean(IbmData[,i], na.rm = TRUE)
}
View(IbmData)
#IV.Displaying the scatter plot of “Age”, “MonthlyIncome” and “YearsAtCompany”, one pair at a time
df <- data.frame(IbmData)
pairs(df[,c(1,4,5)], main = "Scatter Plot of Age, MonthlyIncome and YearsAtCompany", pch = 0, col = "blue")
#V.Showing box plots for columns: “Age”, “MonthlyIncome”, and “YearsAtCompany”
boxplot(df[, c("Age","MonthlyIncome","YearsAtCompany")], col = c('Blue', 'Red', 'Green'))
title("Box Plot for Age, MonthlyIncome and YearsAtCompany")
#Clear Variables
rm(list = ls())
#Load the “IBM_attrition_v3” dataset:
IbmData <- read.csv(file = "/Users/prashantmall1997/Library/CloudStorage/OneDrive-Personal/Coding/Stevens-Courses/CS513A/Homework Assignments/MidTerm/IBM_Attrition_v3.csv",header=TRUE, sep=",")
View(IbmData)
#I.Summarizing each column (e.g., min, max, mean)
summary(IbmData)
#II.Identifying missing values
missingData <- is.na(IbmData)
View(missingData)
#III.Replacing the numerical missing values with the “mean” of the corresponding columns
for(i in 1:ncol(IbmData)){
IbmData[is.na(IbmData[,i]), i] <- mean(IbmData[,i], na.rm = TRUE)
}
View(IbmData)
#IV.Displaying the scatter plot of “Age”, “MonthlyIncome” and “YearsAtCompany”, one pair at a time
df <- data.frame(IbmData)
pairs(df[,c(1,4,5)], main = "Scatter Plot of Age, MonthlyIncome and YearsAtCompany", pch = 0, col = "blue")
#V.Showing box plots for columns: “Age”, “MonthlyIncome”, and “YearsAtCompany”
boxplot(df[, c("Age","MonthlyIncome","YearsAtCompany")], col = c('Blue', 'Red', 'Green'))
title("Box Plot for Age, MonthlyIncome and YearsAtCompany")
#Clear Variables
rm(list = ls())
#Load the “IBM_attrition_v2” dataset:
IbmData <- read.csv(file = "/Users/prashantmall1997/Library/CloudStorage/OneDrive-Personal/Coding/Stevens-Courses/CS513A/Homework Assignments/MidTerm/IBM_Attrition_v2.csv",header=TRUE, sep=",")
#Clear Variables
rm(list = ls())
#Load the “IBM_attrition_v2” dataset:
IbmData <- read.csv(file = "/Users/prashantmall1997/Library/CloudStorage/OneDrive-Personal/Coding/Stevens-Courses/CS513A/Homework Assignments/MidTerm/IBM_Attrition_v2.csv",header=TRUE, sep=",")
View(IbmData)
#Remove the missing values.
IbmData <- na.omit(IbmData)
View(IbmData)
#Discretize the “MonthlyIncome” into “up to3,000”, “3000 up to 5,000.00”, “5000 up to 8,500” and “8500 or more” per months.
IbmData$MonthlyIncome <- ifelse(IbmData$MonthlyIncome<=3000,"up to 3000", ifelse(IbmData$MonthlyIncome>3000&IbmData$MonthlyIncome<=5000, "3000 to 5000", ifelse(IbmData$MonthlyIncome>5000&IbmData$MonthlyIncome<=8500,"5000 to 8500","8500 or more")))
View(IbmData)
#Discretize the age into “less than 31”, “31 up to 38”, “38 up to 48”, and “48 or over”.
IbmData$Age <- ifelse(IbmData$Age<=31,"less than 31", ifelse(IbmData$Age>31&IbmData$Age<=38, "31 up to 38", ifelse(IbmData$Age>38&IbmData$Age<=48,"38 up to 48","48 or more")))
View(IbmData)
#Split into training and testing
sampleData<-sort(sample(nrow(IbmData),as.integer(.70*nrow(IbmData))))
training<-IbmData[sampleData,]
testing<-IbmData[-sampleData,]
library(e1071)
library(class)
nBayes_class <- naiveBayes(Attrition~., data =training)
#Predict Target Class for the Validation set
predict_naive <- predict(nBayes_class, testing)
#Confusion Matrix
confussionMatrix <- table(Prediction=predict_naive,Class=testing$Attrition)
print(confussionMatrix)
#Output of Naive Bayes Classifier
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(confussionMatrix)
#Clear Variables
rm(list = ls())
##Importing the libraries
library(e1071)
library(class)
#Load the “IBM_attrition_v2” dataset:
IbmData <- read.csv(file = "/Users/prashantmall1997/Library/CloudStorage/OneDrive-Personal/Coding/Stevens-Courses/CS513A/Homework Assignments/MidTerm/IBM_Attrition_v2.csv",header=TRUE, sep=",")
View(IbmData)
#Remove the missing values.
IbmData <- na.omit(IbmData)
View(IbmData)
#Discretize the “MonthlyIncome” into “up to3,000”, “3000 up to 5,000.00”, “5000 up to 8,500” and “8500 or more” per months.
IbmData$MonthlyIncome <- ifelse(IbmData$MonthlyIncome<=3000,"up to 3000", ifelse(IbmData$MonthlyIncome>3000&IbmData$MonthlyIncome<=5000, "3000 to 5000", ifelse(IbmData$MonthlyIncome>5000&IbmData$MonthlyIncome<=8500,"5000 to 8500","8500 or more")))
View(IbmData)
#Discretize the age into “less than 31”, “31 up to 38”, “38 up to 48”, and “48 or over”.
IbmData$Age <- ifelse(IbmData$Age<=31,"less than 31", ifelse(IbmData$Age>31&IbmData$Age<=38, "31 up to 38", ifelse(IbmData$Age>38&IbmData$Age<=48,"38 up to 48","48 or more")))
View(IbmData)
#Split into training and testing
sampleData<-sort(sample(nrow(IbmData),as.integer(.70*nrow(IbmData))))
training<-IbmData[sampleData,]
testing<-IbmData[-sampleData,]
nBayes_class <- naiveBayes(Attrition~., data =training)
#Predict Target Class for the Validation set
predict_naive <- predict(nBayes_class, testing)
#Confusion Matrix
confussionMatrix <- table(Prediction=predict_naive,Class=testing$Attrition)
print(confussionMatrix)
#Output of Naive Bayes Classifier
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(confussionMatrix)
#Clear Variables
rm(list = ls())
##Importing the libraries
library(rpart)
library(rpart.plot)
#Load the “IBM_attrition_v2” dataset:
IbmData <- read.csv(file = "/Users/prashantmall1997/Library/CloudStorage/OneDrive-Personal/Coding/Stevens-Courses/CS513A/Homework Assignments/MidTerm/IBM_Attrition_v2.csv",header=TRUE, sep=",")
View(IbmData)
#Remove the missing values
IbmData <- na.omit(IbmData)
View(IbmData)
#Discretize the “MonthlyIncome” into “up to3,000”, “3000 up to 5,000”, “5,000 up to 8,500” and “8500 or more” per months
IbmData$MonthlyIncome <- ifelse(IbmData$MonthlyIncome<=3000,"up to 3000", ifelse(IbmData$MonthlyIncome>3000&IbmData$MonthlyIncome<=5000, "3000 to 5000", ifelse(IbmData$MonthlyIncome>5000&IbmData$MonthlyIncome<=8500,"5000 to 8500","8500 or more")))
View(IbmData)
#Discretize the age into “less than 31”, “31 up to 38”, “38 up to 48”, and “48 or over”
IbmData$Age <- ifelse(IbmData$Age<=31,"less than 31", ifelse(IbmData$Age>31&IbmData$Age<=38, "31 up to 38", ifelse(IbmData$Age>38&IbmData$Age<=48,"38 up to 48","48 or more")))
View(IbmData)
#Split into training and testing
sampleData<-sort(sample(nrow(IbmData),as.integer(.70*nrow(IbmData))))
training<-IbmData[sampleData,]
testing<-IbmData[-sampleData,]
#Prediciting the CART methodology
CART_class<-rpart( Attrition~.,data=training)
rpart.plot(CART_class)
CART_predict<-predict(CART_class,testing,type="class")
#Confusion Matrix
ConfusionMatrix <- table(pred=CART_predict,class=testing$Attrition)
print(ConfusionMatrix)
#Accuracy
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(ConfusionMatrix)
#Clear Variables
rm(list = ls())
library(class)
#Load the “IBM_attrition_v2” dataset:
IbmData <- read.csv(file = "/Users/prashantmall1997/Library/CloudStorage/OneDrive-Personal/Coding/Stevens-Courses/CS513A/Homework Assignments/MidTerm/IBM_Attrition_v2.csv",header=TRUE, sep=",")
View(IbmData)
#Remove the missing values
IbmData <- na.omit(IbmData)
View(IbmData)
IBM_data$Attrition <- ifelse(IBM_data$Attrition=="Yes",1,2)
#eliminating rows with missing data
missingIBM_data = IBM_data[!complete.cases(IBM_data),]
IBM_data <- na.omit(IBM_data)
#Splitting the dataset into training and testing
sampleData<-sort(sample(nrow(IBM_data),as.integer(.30*nrow(IBM_data))))
training<-IBM_data[-sampleData,]
#Clear Variables
rm(list = ls())
library(class)
#Load the “IBM_attrition_v2” dataset:
IbmData <- read.csv(file = "/Users/prashantmall1997/Library/CloudStorage/OneDrive-Personal/Coding/Stevens-Courses/CS513A/Homework Assignments/MidTerm/IBM_Attrition_v2.csv",header=TRUE, sep=",")
View(IbmData)
#Remove Missing Values
IbmData <- na.omit(IbmData)
View(IbmData)
IbmData$Attrition <- ifelse(IbmData$Attrition=="Yes",1,2)
#Eliminating Rows with Missing Data
missingIbmData = IbmData[!complete.cases(IbmData),]
IbmData <- na.omit(IbmData)
#Split Dataset into Training and Testing
sampleData<-sort(sample(nrow(IbmData),as.integer(.30*nrow(IbmData))))
training<-IbmData[-sampleData,]
testing<-IbmData[sampleData,]
#Classification
classifier_knn <- knn(training, testing, IbmData[-sampleData,4], k=3)
#Confusion Matrix
confusion_matrix <- table (classifier_knn, testing[,4])
confusion_matrix
#Accuracy
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(confusion_matrix)
rm(list = ls())
library(randomForest)
library(class)
library(C50)
df=read.csv("/Users/mrunalsalunke/MS_CS/SEM3/CS513-KDD/Assignments/breast-cancer-wisconsin.csv",header = TRUE, sep = ',')
#sumary of Data Frame
summary(df)
# F6 is a type of character, need to convert into the number
df$F6<-as.numeric(as.character((df$F6)))
summary((df))
# count and remove NA's from the dataframe
sum(is.na(df))
